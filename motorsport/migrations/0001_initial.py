# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2017-01-07 19:04
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('party', '0002_genericpartyrole_contact_mediums'),
        ('compete', '0008_auto_20170108_0133'),
        ('physical_object', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Lap',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='compete.Event')),
                ('lap_number', models.IntegerField()),
                ('position', models.IntegerField(blank=True, null=True)),
                ('gap', models.DurationField(blank=True, null=True)),
                ('race_time', models.DurationField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('compete.event',),
        ),
        migrations.CreateModel(
            name='Race',
            fields=[
                ('fixture_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='compete.Fixture')),
                ('method', models.CharField(choices=[('laps', 'laps'), ('duration', 'duration'), ('duration', 'laps or duration')], default='laps', max_length=100)),
                ('total_laps', models.IntegerField(blank=True, null=True)),
                ('total_duration', models.DurationField(blank=True, null=True)),
                ('current_lap_number', models.IntegerField(blank=True, null=True)),
                ('laps_to_go', models.IntegerField(blank=True, null=True)),
                ('time_to_go', models.DurationField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('compete.fixture',),
        ),
        migrations.CreateModel(
            name='RaceCar',
            fields=[
                ('vehicle_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='physical_object.Vehicle')),
                ('car_id_txt', models.CharField(max_length=10)),
                ('sponsor', models.CharField(blank=True, max_length=200)),
                ('tyres', models.CharField(blank=True, max_length=100)),
                ('colours', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'abstract': False,
            },
            bases=('physical_object.vehicle',),
        ),
        migrations.CreateModel(
            name='RaceClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('sponsor', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RaceEntry',
            fields=[
                ('entry_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='compete.Entry')),
                ('timing_id', models.IntegerField(blank=True, null=True)),
                ('car_id_txt', models.CharField(blank=True, max_length=10, null=True)),
                ('grid_pos', models.IntegerField(blank=True, null=True)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('finish_pos', models.IntegerField(blank=True, null=True)),
                ('finish_time', models.TimeField(blank=True, null=True)),
                ('current_driver', models.IntegerField(default=0)),
                ('current_position', models.IntegerField(blank=True, null=True)),
                ('current_points', models.IntegerField(blank=True, null=True)),
                ('current_gap', models.DurationField(blank=True, null=True)),
                ('current_time', models.DurationField(blank=True, null=True)),
                ('best_lap', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='race_entry_best_lap', to='motorsport.Lap')),
                ('car', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='motorsport.RaceCar')),
                ('codriver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='codriver', to='party.Individual')),
                ('current_lap', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='race_entry_current_lap', to='motorsport.Lap')),
                ('last_lap', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='race_entry_last_lap', to='motorsport.Lap')),
                ('race_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='motorsport.RaceClass')),
            ],
            options={
                'abstract': False,
            },
            bases=('compete.entry',),
        ),
        migrations.AddField(
            model_name='racecar',
            name='race_class',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='motorsport.RaceClass'),
        ),
        migrations.AddField(
            model_name='race',
            name='race_classes',
            field=models.ManyToManyField(blank=True, to='motorsport.RaceClass'),
        ),
    ]
